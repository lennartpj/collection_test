- name: Prompt for IPv4 address
  pause:
    prompt: "Please enter the IPv4 address and prefix (10.0.0.2/24)"
  register: ipv4_address_input

- name: Prompt for IPv4 gateway
  pause:
    prompt: "Please enter the IPv4 gateway"
  register: ipv4_gateway_input

# Get the current settings
- name: Get current IPv4 addresses
  shell: nmcli -g ipv4.addresses con show "{{ connection_interface_name }}"
  register: current_ipv4_addresses
  changed_when: false

- name: Get current IPv4 gateway
  shell: nmcli -g ipv4.gateway con show "{{ connection_interface_name }}"
  register: current_ipv4_gateway
  changed_when: false

- name: Get current IPv4 dns
  shell: nmcli -g ipv4.dns con show "{{ connection_interface_name }}"
  register: current_ipv4_dns
  changed_when: false

- name: Get current IPv4 dns-search
  shell: nmcli -g ipv4.dns-search con show "{{ connection_interface_name }}"
  register: current_ipv4_dns_search
  changed_when: false

- name: Get current IPv6 method
  shell: nmcli -g ipv6.method con show "{{ connection_interface_name }}"
  register: current_ipv6_method
  changed_when: false

- name: Get current IPv6 addr-gen-mode
  shell: nmcli -g ipv6.addr-gen-mode con show "{{ connection_interface_name }}"
  register: current_ipv6_addr_gen_mode
  changed_when: false

- name: Get current IPv6 dns-search
  shell: nmcli -g ipv6.dns-search con show "{{ connection_interface_name }}"
  register: current_ipv6_dns_search
  changed_when: false

- name: Get current IPv6 ip6-privacy
  shell: nmcli -g ipv6.ip6-privacy con show "{{ connection_interface_name }}"
  register: current_ipv6_ip6_privacy
  changed_when: false

# Apply settings if they differ from the current ones
- name: Set IPv4 addresses
  command: nmcli con mod "{{ connection_interface_name }}" ipv4.addresses "{{ ipv4_address_input.user_input }}"
  become: yes
  when: current_ipv4_addresses.stdout != ipv4_address_input.user_input

- name: Set IPv4 gateway
  command: nmcli con mod "{{ connection_interface_name }}" ipv4.gateway "{{ ipv4_gateway_input.user_input }}"
  become: yes
  when: current_ipv4_gateway.stdout != ipv4_gateway_input.user_input

- name: Set IPv4 DNS servers
  command: nmcli con mod "{{ connection_interface_name }}" ipv4.dns "{{ ipv4_dns | join(',') }}"
  become: yes
  when: current_ipv4_dns.stdout != (ipv4_dns | join(','))

- name: Set IPv4 DNS search domains
  command: nmcli con mod "{{ connection_interface_name }}" ipv4.dns-search "{{ ipv4_dns_search }}"
  become: yes
  when: current_ipv4_dns_search.stdout != ipv4_dns_search

- name: Set IPv6 method
  command: nmcli con mod "{{ connection_interface_name }}" ipv6.method "{{ ipv6_method }}"
  become: yes
  when: current_ipv6_method.stdout != ipv6_method

- name: Set IPv6 addr-gen-mode
  command: nmcli con mod "{{ connection_interface_name }}" ipv6.addr-gen-mode "{{ ipv6_addr_gen_mode }}"
  become: yes
  when: current_ipv6_addr_gen_mode.stdout != ipv6_addr_gen_mode

- name: Set IPv6 dns-search
  command: nmcli con mod "{{ connection_interface_name }}" ipv6.dns-search "{{ ipv6_dns_search }}"
  become: yes
  when: current_ipv6_dns_search.stdout != ipv6_dns_search

- name: Set IPv6 ip6-privacy
  command: nmcli con mod "{{ connection_interface_name }}" ipv6.ip6-privacy "{{ ipv6_ip6_privacy }}"
  become: yes
  when: current_ipv6_ip6_privacy.stdout != ipv6_ip6_privacy

# notify the handler if any change occurred
- name: Restart NetworkManager
  systemd:
    name: NetworkManager
    state: restarted
  become: yes
  when: 
    - current_ipv4_addresses.stdout != ipv4_address_input.user_input 
    - current_ipv4_gateway.stdout != ipv4_gateway_input.user_input 
    - current_ipv4_dns.stdout != (ipv4_dns | join(','))
    - current_ipv4_dns_search.stdout != ipv4_dns_search 
    - current_ipv6_method.stdout != ipv6_method 
    - current_ipv6_addr_gen_mode.stdout != ipv6_addr_gen_mode 
    - current_ipv6_dns_search.stdout != ipv6_dns_search 
    - current_ipv6_ip6_privacy.stdout != ipv6_ip6_privacy
